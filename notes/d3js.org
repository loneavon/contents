#+TITLE: D3.js: Data-Driven Documents
#+DATE: 2016-01-09

* 前言
一直以来我在 Web 页面上画图使用的都是 Highcharts/ECharts/ChartJS 等 JS 库，
它们用法大同小异，都是传递以 ~格式复杂的 JSON 数据~ 和 ~形式更为复杂的选项~
的来实现画图。个人感觉这些画图库存在着一些劣势：
1. 配置琐碎，易于上手，当时想进一步提升开发效率却不易（即难于精通）
2. 难以精确控制
3. 绘图效果比较不够理想（ChartJS 除外，可惜它功能略简单）
4. 有的场景存在性能问题
   
这几天在实现 [[./tms-v2.org][TMS V2]] ，在思考如何展示 TMS 时，觉得我需要更强大的绘图工具。我
一直以来都觉得 [[https://github.com/torvalds/linux/graphs/contributors][GitHub Graph]] 绘图效果很不错，经过多方调研，在 [[http://stackoverflow.com/questions/14507778/github-contributions-graph][这里]] 得知
GitHub 是使用 D3 来绘制的。

于是，我开始学习 D3。

* 资料收集
- http://d3js.org/
- https://github.com/mbostock/d3
- [[https://github.com/mbostock/d3/wiki/API--%25E4%25B8%25AD%25E6%2596%2587%25E6%2589%258B%25E5%2586%258C][D3 API 中文手册]]
- [[http://d3.decembercafe.org/index.html][Learning D3.JS - DecemberCafe]]

** 文章
- [[http://vegibit.com/create-a-bar-chart-with-d3-javascript/][Create A Bar Chart With D3 JavaScript]]

* D3学习
** Learning D3.JS - DecemberCafe
1. 绑定：将数据绑定到选择集上，方便 *后续* 操作。datum是一绑多，而data是多
   绑多，将一个数据集绑定到一个选择集上。data更常用。
2. 插入append：在选择集的最后一个孩子元素之前插入一个元素（注意不是选择集自
   身）。
3. enter+append组合：有数据，而没有足够图形元素的时候，使用此方法可以添加足
   够的元素。
4. 比例尺（scale）实现了从定义域（doman）到值域（range）之间的映射，比例尺
   有很多种，例如线性比例尺（d3.scale.linear），（用于离散数据的）序数比例
   尺（d3.scale.ordinal）。当定义好一个比例尺并绑定好数据集后，我们可以在
   attr函数里通过比例尺来为图形元素指定宽度、长度和坐标等参数。
5. d3.svg.axis用来绘制坐标轴，可以通过.scale()指定坐标轴的比例尺，使用.orient()
   指定坐标轴刻度线的朝向，使用.ticks()指定可读的数量。一直绘制完成的坐标轴，
   包块一个path，多个line（刻度），刻度文字，还有分组元素<g>。

** TensorFlow Playgroud分析 <2016-09-04 日>
   
TensorFlow是Google开源的一款机器学习的库，而 [[http://playground.tensorflow.org/][TensorFlow Playground]] 则是将
TensorFlow的神经网络进行可视化展现的一个工具，效果很炫。它是用D3和
TypeScript编写，UI使用了Google的MDL。可以借助它来了解一下D3的用法。



* 回顾
** 使用 D3 画了 TMS Calendar <2016-01-10 日>
第一次使用 D3 画图，感觉良好！

#+CAPTION: ./imgs/d3js_20160110020323.png
[[./imgs/d3js_20160110020323.png]]
